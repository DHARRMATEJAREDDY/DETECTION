# -*- coding: utf-8 -*-
"""submissionproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h8veo-wln7g9vJOAsXVYJH42xfZRmH9x

**IMPORT LIBRARY**
"""

import pandas as pd

import numpy as np

"""**IMPORT CSV AS DATAFRAME**"""

df = pd.read_csv(r'https://github.com/YBI-Foundation/Dataset/raw/main/WhiteWineQuality.csv',sep=';')

""" **GET THE FIRST FIVE ROWS OF DATAFRAME**"""

df.head()

"""**GET INFORMATION OF DATAFRAME**"""

df.info()

"""**GET THE SUMMARY STATISTICS**"""

df.describe()

"""**GET THE COLUMN NAMES**"""

df.columns

"""**GET SHAPE OF DATAFRAME**"""

df.shape

"""**GET UNIQUE VALUES IN Y VARIBLE**"""

df['quality'].value_counts()

df.groupby('quality').mean()

"""**DEFINE Y(DEPENDENT) AND X(INDEPENDENT)**"""

y=df['quality']

y.shape

y

x = df[['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]

x = df.drop(['quality'],axis=1)

x.shape

x

"""**GET X VARIABLES STANDARDIZED**"""

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()

x=ss.fit_transform(x)

x

"""**GET TRAIN TEST SPLIT**"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,stratify= y,random_state=2529)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

"""**GET MODEL TRAIN**"""

from sklearn.svm import SVC

svc = SVC()

svc.fit(x_train,y_train)

"""**GET MODEL PREDICTION**"""

y_pred = svc.predict(x_test)

y_pred.shape

y_pred

"""**GET MODEL EVALUATION**"""

from sklearn.metrics import confusion_matrix,classification_report

print(confusion_matrix(y_test,y_pred))

print (classification_report(y_test,y_pred))

"""**GET MODEL RE-RUN WITH TWO CLASS created for wine quality**"""

y=df['quality'].apply(lambda y_value:1 if y_value>=6 else 0)

y.value_counts()

"""**GET TRAIN TEST SPLIT**"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,stratify= y,random_state=2529)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

"""**GET MODEL TRAIN**"""

from sklearn.svm import SVC

svc = SVC()

svc.fit(x_train,y_train)

"""**GET MODEL PREDICTION**"""

y_pred = svc.predict(x_test)

y_pred.shape

y_pred

"""**GET MODEL EVLUATION**"""

from sklearn.metrics import confusion_matrix,classification_report

print(confusion_matrix(y_test,y_pred))

print(classification_report(y_test,y_pred))

"""**GET FUTURE PREDICTIONS**
LET SELECT RANDOM SAMPLE FROM EXISTING DATASET AS NEW VALUE
STEPS TO FOLLOW
1.EXTRACT RANDOM ROW USING SAMPLE FUNCTION
2.SEPERATE X AND Y
3.STANDARDIZE X
4.PREDICT
"""

df_new = df.sample(1)

df_new

df_new.shape

x_new = df_new.drop(['quality'],axis=1)

x_new = ss.fit_transform(x_new)

y_pred_new = svc.predict(x_new)

y_pred_new

